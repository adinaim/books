# Generated by Django 5.0.1 on 2024-04-03 06:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('book', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BookPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(blank=True, max_length=58)),
                ('total_sum', models.DecimalField(decimal_places=2, default=0, max_digits=14)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('finished', 'Finished')], default='pending', max_length=9)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Book order',
                'verbose_name_plural': 'Books orders',
            },
        ),
        migrations.CreateModel(
            name='OrderItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_num', models.PositiveIntegerField(default=1)),
                ('book', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='book_items', to='book.book')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_items', to='order.bookpurchase')),
            ],
            options={
                'verbose_name': 'Basket item',
                'verbose_name_plural': 'Basket items',
            },
        ),
        migrations.AddField(
            model_name='bookpurchase',
            name='book',
            field=models.ManyToManyField(through='order.OrderItems', to='book.book'),
        ),
    ]
